@using Microsoft.AspNet.Identity
@model AspNetMVC.ViewModels.PostsDetailsViewModel

@{
    ViewBag.Title = ViewBag.PostType;
}

<!-- Page Header -->
<!-- Set your background image for this header on the line below. -->
<header class="intro-header" style="background-image: url('@Url.Content("~/images/post-bg.jpg")') ">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <div class="site-heading">
                    <h1>@Model.post.title</h1>
                    <h2 class="subheading">@Model.post.sub_title</h2>
                    <span class="meta">
                        由
                        <a href="@Url.Action("_User", "Posts", new { id = Model.post.user_id }) ">@Model.post.user.UserName</a>
                        發表於 @Model.post.created_at.ToString()
                    </span>
                </div>
            </div>
        </div>
    </div>
</header>

<!-- Post Content -->
<article>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">

                @Html.Partial("_NotificationPartial")

                @if (Request.IsAuthenticated && Model.post.user.Id == User.Identity.GetUserId())
                { 
                    <div class="text-right" style="margin-bottom: 50px;">
                        <a href="@Url.Action("Edit", "Posts", new { id = Model.post.id })" class="btn btn-primary">編輯</a>
                        <a href="@Url.Action("Delete", "Posts", new { id = Model.post.id })" class="btn btn-primary">刪除</a>
                    </div>
                }

                <div style="margin-bottom: 30px;">
                    @Model.post.content
                </div>

                <!-- Comments Form -->
                <div class="well">
                    <h4>留下您的意見：</h4>
                    @using (Html.BeginForm("Comment", "Posts",new { id=Model.post.id}))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.comment.name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.comment.name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comment.name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.comment.email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.comment.email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comment.email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.comment.content, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.comment.content, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.comment.content, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <input type="submit" value="送出" class="btn btn-primary" />
                        </div>
                    }
                </div>

                <hr>

                <!-- Posted Comments -->
                @foreach (var item in Model.post.Comments)
                {
                    <div class="media">
                        <div class="media-body">
                            <h4 class="media-heading">
                                @item.name (@item.email)
                                <small>@item.created_at.ToString()</small>
                            </h4>
                            @item.content
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</article>
